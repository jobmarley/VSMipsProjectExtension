// ElfSymbolProvider.idl : IDL source for ElfSymbolProvider
//

// This file will be processed by the MIDL tool to
// produce the type library (ElfSymbolProvider.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
import "msdbg.idl";

[
	object,
	uuid(BB324892-D76E-41A6-97EC-8A106D43C4CF),
	pointer_default(unique)
]
interface IRegisterOperation : IUnknown
{
	HRESULT Read(DWORD index, DWORD* pValue);
	HRESULT Write(DWORD index, DWORD value);
};
[
	object,
	uuid(06E76594-7C91-4282-9B10-6A626D5D4864),
	pointer_default(unique)
]
interface IMemoryOperation : IUnknown
{
	HRESULT Read(BYTE* buffer, DWORD offset, DWORD count, DWORD* pReadCount);
	HRESULT Write(BYTE* buffer, DWORD offset, DWORD count, DWORD* pWrittenCount);
};
[
	object,
	uuid(c8b40372-81f0-45f5-8532-02f8443dd2a6),
	pointer_default(unique)
]
interface IElfSymbolProvider : IDebugSymbolProvider
{
	HRESULT GetAddressFromMemory(
		DWORD memAddr,
		IDebugAddress** ppAddress);

	HRESULT LoadModule(
		IDebugModule2* pDebugModule,
		LPCOLESTR pszFilepath,
		DWORD address);

	HRESULT GetStackFrame(
		IDebugAddress* pAddress,
		IDebugThread2* pThread,
		IMemoryOperation* pMemoryOp,
		IRegisterOperation* pRegisterOp,
		IDebugStackFrame2** ppStackFrame);

	HRESULT GetPreviousStackFrame(IDebugStackFrame2* pStackFrame, IDebugStackFrame2** ppStackFrame);
};
[
	uuid(d58c5021-1e35-4bde-854c-80217cada2ae),
	version(1.0),
]
library ElfSymbolProviderLib
{
	importlib("stdole2.tlb");
	[
		uuid(305ae8e3-ce4d-4a0b-889c-9836bf4ddedf)
	]
	coclass ElfSymbolProvider
	{
		[default] interface IElfSymbolProvider;
	};
	[
		uuid(a40ab257-221d-4db3-8618-f7e2cfb16355)
	]
	coclass ElfDebugAddress
	{
		[default] interface IDebugAddress;
	};
	[
		uuid(546d6384-97ab-428b-9be2-5e287080ce93)
	]
	coclass ElfDebugDocumentContext
	{
		[default] interface IDebugDocumentContext2;
	};
	[
		uuid(d8762730-223e-4616-9d72-236321bbfb9a)
	]
	coclass ElfDebugCodeContext
	{
		[default] interface IDebugCodeContext2;
	};
	[
		uuid(ab1a8bf8-f8b7-4681-bdc8-5c389f9835fe)
	]
	coclass ElfDebugStackFrame
	{
		[default] interface IDebugStackFrame2;
	};
};